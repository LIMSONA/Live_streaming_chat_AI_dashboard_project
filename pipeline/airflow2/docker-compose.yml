version: '2'


services:

  postgresql:  # postgres = DB

    # build: 
    #  context: .
    #  dockerfile: ./dockerfile.airflow

    image: docker.io/bitnami/postgresql:10

    volumes:
      - 'postgresql_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_DATABASE=bitnami_airflow
      - POSTGRESQL_USERNAME=bn_airflow
      - POSTGRESQL_PASSWORD=bitnami1
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes


  redis:  # redis = 스케줄러에서 작업자(worker)에게 메세지 전달하는 브로커

    build: 
      context: .
      dockerfile: ./dockerfile.airflow

    image: docker.io/bitnami/redis:6.0
    volumes:
      - 'redis_data:/bitnami'
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes


  airflow-scheduler:  # airflow-scheduler = 모든 작업과 DAG를 모니터링하기위함. 완료시 작업 인스턴스 트리거 역할

    build: 
      context: .
      dockerfile: ./dockerfile.airflow

    image: docker.io/bitnami/airflow-scheduler:2
    environment:
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_WEBSERVER_HOST=airflow
      - AIRFLOW_LOAD_EXAMPLES=no  # 예제 올라오지 않도록 false로 변경


  airflow-worker:  # airflow-worker = 스케줄러에 의해 주어진 작업을 실행하는 작업자
    build: 
      context: .
      dockerfile: ./dockerfile.airflow
    image: docker.io/bitnami/airflow-worker:2
    environment:
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_WEBSERVER_HOST=airflow
      - AIRFLOW_LOAD_EXAMPLES=no
    volumes:
      - ./dags:/opt/bitnami/airflow/dags

  airflow:
    build: 
      context: .
      dockerfile: ./dockerfile.airflow
    image: docker.io/bitnami/airflow:2
    environment:
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_LOAD_EXAMPLES=no
    ports:
      - '8080:8080'
    # volumes:
    #   - ./dags:/bitnami/airflow/dags
    

volumes:
  postgresql_data:
    driver: local
  redis_data:
    driver: local