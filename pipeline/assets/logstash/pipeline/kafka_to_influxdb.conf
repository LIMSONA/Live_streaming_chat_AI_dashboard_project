input {
  kafka {
    bootstrap_servers => "${KAFKA_SERVER}"
    topics => "message"
    codec => json 
    type => "input_message"
    } 
  kafka { 
    bootstrap_servers => "${KAFKA_SERVER}"
    topics => "input" 
    codec => json 
    type => "output_spark"
  }
}
# filter {
#   mutate {
#     convert => {
#       "video_unique" => "string"
#       "num" => "integer"
#       "chat_time" => "string"
#       "chat_id" => "string"
#       "chat_message" => "string"
#     }
#   #  remove_field => [ "@version", "original", "event", "@timestamp"]
#   }
# }
output { 
  stdout {
     codec => rubydebug #rubydebug는 출력을 보기좋은 포맷으로 바꿔 준다.
  }
  if [type] == "input_message" {
    mongodb {
        #  uri => "mongodb://ek:ek@${MONGODB_HOST}/LiveCommerce"
        # uri => "mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@${MONGODB_HOST}/LiveCommerce" 
        # mongodb://아이디:비번@Mongoddb서버주소:포트넘버/
        uri => "mongodb://ek:ek@mongodb:27017"
        collection => "LiveCommerce"
        database => "LiveCommerce"
        codec => json
        isodate => true
        }
  }
  else {
    influxdb {
      host => "influxdb_default"
      db => "db0"
      user => "admin"
      password => "password"
      codec => json
      measurement  => "appstats"
      data_points => {
      "video_unique" => "%{video_unique}"
      "num" => "%{[num]}"
      "chat_time" => "%{[chat_time]}"
      "chat_id" => "%{[chat_id]}"
      "chat_message" => "%{[chat_message]}"
      # "swear_score" => "%{[chat_message]}"
      # "pn_score" => "%{[chat_message]}"
      # "qa_score" => "%{[chat_message]}"
      }
    }
  }
}
